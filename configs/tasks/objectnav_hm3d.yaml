ENVIRONMENT:
  MAX_EPISODE_STEPS: 500
  ITERATOR_OPTIONS:
    CYCLE: True
    SHUFFLE: False
    MAX_SCENE_REPEAT_EPISODES: -1
    MAX_SCENE_REPEAT_STEPS: -1

SIMULATOR:
  FORWARD_STEP_SIZE: 0.25
  TURN_ANGLE: 30
  TILT_ANGLE: 30
  ACTION_SPACE_CONFIG: "v1"
  AGENT_0:
    SENSORS: ['RGB_SENSOR', "DEPTH_SENSOR", "SEMANTIC_SENSOR"]
    HEIGHT: 0.88
    RADIUS: 0.18
  HABITAT_SIM_V0:
    GPU_DEVICE_ID: 0
    ALLOW_SLIDING: False
  SEMANTIC_SENSOR:
    WIDTH: 640
    HEIGHT: 480
    HFOV: 79
    POSITION: [0, 0.88, 0]
  RGB_SENSOR:
    WIDTH: 640
    HEIGHT: 480
    HFOV: 79
    POSITION: [0, 0.88, 0]
    # Stretch-like
    # WIDTH: 450
    # HEIGHT: 600
    # HFOV: 90
    # POSITION: [0, 1.3, 0]
    # ORIENTATION: [-0.35, 0, 0]
  DEPTH_SENSOR:
    WIDTH: 640
    HEIGHT: 480
    HFOV: 79
    MIN_DEPTH: 0.5
    MAX_DEPTH: 5.0
    POSITION: [0, 0.88, 0]
SCENE_DATASET: "data/scene_datasets/hm3d/hm3d_annotated_basis.scene_dataset_config.json"
TASK:
  TYPE: ObjectNav-v2
  POSSIBLE_ACTIONS: ["STOP", "MOVE_FORWARD", "TURN_LEFT", "TURN_RIGHT", "LOOK_UP", "LOOK_DOWN"]
  SUCCESS_DISTANCE: 0.1

  # SENSORS: ['OBJECTGOAL_SENSOR']
  SENSORS: ['OBJECTGOAL_SENSOR', 'COMPASS_SENSOR', 'GPS_SENSOR']
  GOAL_SENSOR_UUID: objectgoal
  
  DEMONSTRATION_SENSOR:
    TYPE: DemonstrationSensor
  DEMONSTRATION_SENSOR_UUID: "next_actions"

  INFLECTION_WEIGHT_SENSOR:
    TYPE: InflectionWeightSensor
    INFLECTION_COEF: 3.477512060914205

  INFLECTION_WEIGHT_SENSOR_UUID: "inflection_weight"

  MEASUREMENTS: ['DISTANCE_TO_GOAL', 'SUCCESS', 'SPL', 'SOFT_SPL', 'SPARSE_REWARD']

  DISTANCE_TO_GOAL:
    DISTANCE_TO: VIEW_POINTS

  SUCCESS:
    SUCCESS_DISTANCE: 0.1

DATASET:
  TYPE: ObjectNav-v2
  SPLIT: train
  DATA_PATH: "data/datasets/objectnav/objectnav_hm3d/objectnav_hm3d_v1/{split}/{split}.json.gz"
  SCENES_DIR: "data/scene_datasets/"
  MAX_EPISODE_STEPS: 500
  EPISODE_STRIDE: 1
  SPLIT_EPISODES: False
  SORT_BY_SCENE_AND_GOAL: False
  SUB_SPLIT_INDEX_PATH: null

SUB_SPLIT_GENERATOR:
  STRIDE: 10
  START_IDX: 0
  INDEX_PATH: null

REPRESENTATION_GENERATOR:
  skip_non_movement_actions: False
  skip_look_actions: False
  generate_skip_index: False
  data_generators:
    raw_image:
      resize_and_crop_to: 256
    # agent_state:
    # non_visual:
    # clip:
    #   use_float16: True
      # model_path: "/data/drive2/models/clip-vit-base-patch32"
    # ground_truth_costmap:
    #   resize_and_crop_to: 128
    # ground_truth_perception_graph:
  data_storage:
    output_path: /storage/dc/pvr_data/default
    # name: "graph"
    name: "zarr"
    # name: "nomad"
    kwargs:
      batch_chunk_size: 1000


PVR:
  use_pvr_encoder: False
  use_fixed_size_embedding: False
  pvr_data_path: "pvr_data/one_percent_two/clip_data"
  non_visual_obs_data_path: "pvr_data/one_percent/non_visual_data"
  # pvr_keys: ["cls"]
  # pvr_keys: ["rgb"]
  # pvr_keys: ["last_hidden_layer_pooled", "cls"]
  # pvr_keys: ["last_two_hidden_layers"]
  # pvr_keys: ["goal_costmap"]
  pvr_keys: ["gt_costmap"]
  # pvr_keys: ["rgb", "goal_costmap"]
  # pvr_keys: ["rgb", "gt_costmap"]
  # non_visual_keys: ["done", "reward", "next_action", "objectgoal", "next_actions", "inflection_weight"]
  non_visual_keys: ["done", "reward", "next_action", "gps", "objectgoal", "compass", "next_actions", "inflection_weight"]
  # obs_keys: ["gps", "objectgoal", "compass", "inflection_weight", "cls"]
  # obs_keys: ["gps", "objectgoal", "compass", "inflection_weight", "rgb"]
  # obs_keys: ["objectgoal", "inflection_weight", "last_two_hidden_layers"]
  # obs_keys: ["gps", "objectgoal", "compass", "inflection_weight", "last_hidden_layer_pooled", "cls"]
  # obs_keys: ["gps", "objectgoal", "compass", "inflection_weight", "last_two_hidden_layers"]
  # obs_keys: ["gps", "objectgoal", "compass", "inflection_weight", "last_two_hidden_layers", "rgb", "goal_costmap"]
  obs_keys: ["gps", "objectgoal", "compass", "inflection_weight", "last_two_hidden_layers", "rgb", "gt_costmap"]